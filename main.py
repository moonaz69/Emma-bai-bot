import os
import logging
from datetime import datetime, time
import pytz
import openai
import sys

from telegram import Update
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    MessageHandler,
    ContextTypes,
    filters,
)

logging.basicConfig(
    format="%(asctime)s - %(levelname)s - %(message)s", level=logging.INFO
)
logger = logging.getLogger(__name__)

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–æ–≤
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")
if not TELEGRAM_TOKEN:
    logger.error("‚ùå TELEGRAM_TOKEN is not set! The bot cannot start.")
    sys.exit(1)
logger.info(f"‚úÖ TELEGRAM_TOKEN loaded ({len(TELEGRAM_TOKEN)} chars)")
openai.api_key = OPENAI_API_KEY

BAKU_TZ = pytz.timezone("Asia/Baku")

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π –ª–∏—á–Ω—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç.")

# ‚Ä¶ —Ç—É—Ç –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Ö–µ–Ω–¥–ª–µ—Ä—ã (help, time, remind, calc‚Ä¶)

if __name__ == "__main__":
    logger.info("üîÑ Initializing ApplicationBuilder")
    app = ApplicationBuilder().token(TELEGRAM_TOKEN).build()

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ /start –¥–ª—è —Ç–µ—Å—Ç–∞
    app.add_handler(CommandHandler("start", start))

    logger.info("‚ñ∂Ô∏è Running bot polling")
    app.run_polling()
